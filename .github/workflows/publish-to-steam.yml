name: Publish to Steam

on:
  push:
    branches:
      - main
      - beta
      - demo
    paths-ignore:
      - '**.md'
      - .editorconfig
      - .gitignore
      - .yarnrc
      - LICENSE
  pull_request:
    paths-ignore:
      - '**.md'
      - .editorconfig
      - .gitignore
      - .yarnrc
      - LICENSE

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-next-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install Packages
        run: yarn install

      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      - name: Show version
        run: echo "Next version is ${{ steps.get-next-version.outputs.new-release-version }} (${{ github.ref_name }})"

    outputs:
      published: ${{ steps.get-next-version.outputs.new-release-published }}
      version: ${{ steps.get-next-version.outputs.new-release-version }}
      notes: ${{ steps.get-next-version.outputs.new-release-notes }}

  make:
    needs:
      - get-next-version

    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install Packages
        run: yarn install --network-timeout 600000

      - name: Update the version
        run: yarn version --new-version ${{ needs.get-next-version.outputs.version }} --no-commit-hooks --no-git-tag-version

      - name: Publish
        run: yarn run make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.get-next-version.outputs.version }}-${{ matrix.os }}
          path: out/make/zip/
          retention-days: 1

  release:
    needs:
      - get-next-version
      - make

    runs-on: ubuntu-latest

    steps:
      - name: Generate TOTP
        uses: CyberAndrii/steam-totp@v1
        id: steam-totp
        with:
          shared_secret: ${{ secrets.STEAM_SHARED_SECRET }}

      - name: Download builds
        uses: actions/download-artifact@v3
        with:
          name: my-artifact

      - name: Publish builds to Steam
        uses: game-ci/steam-deploy@v3
        with:
          username: ${{ secrets.STEAM_BUILD_USERNAME }}
          totp: ${{ steps.steam-totp.outputs.code }}
          appId: ${{ github.ref_name == 'demo' && secrets.STEAM_DEMO_APP_ID || secrets.STEAM_APP_ID }}
          buildDescription: ${{ needs.get-next-version.outputs.version }}
          rootPath: rootPath
          depot1Path: The Inn at Nightfall-windows-x64
          depot2Path: The Inn at Nightfall-darwin-arm64
          depot3Path: The Inn at Nightfall-linux-?
          releaseBranch: ${{ github.ref_name == 'beta' && 'beta' || 'default' }}
